apply plugin: 'com.android.application'
apply plugin: 'bugly'

android {
    compileSdkVersion 23
    buildToolsVersion "22.0.1"

    def verName = "1.0.0"

    defaultConfig {
        applicationId "com.ctflab.locker"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 100
        versionName verName
        project
        manifestPlaceholders = [CHANNEL_VALUE: "GooglePlay03"]
    }

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def name = versionProps['VERSION_NAME']
        defaultConfig {
            versionName verName + " Build " + name
        }
    }

    signingConfigs {
        //你自己的keystore信息
        release {

        }
    }

    buildTypes {
        release {
            println()
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [DEBUG:false]
        }
        debug{
            manifestPlaceholders = [DEBUG:true]
        }
    }

    if (project.hasProperty('storeFile') &&
            project.hasProperty('storePassword') &&
            project.hasProperty('keyPassword') &&
            project.hasProperty('keyAlias')) {
        android.signingConfigs.release.storeFile = file(storeFile)
        android.signingConfigs.release.storePassword = storePassword
        android.signingConfigs.release.keyPassword = keyPassword
        android.signingConfigs.release.keyAlias = keyAlias
    } else {
        buildTypes.release.signingConfig = null
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi'
            universalApk false
        }
    }

    productFlavors{
        play{
            manifestPlaceholders = [CHANNEL_VALUE:"GooglePlay03"]
        }
        urltest{
            manifestPlaceholders = [CHANNEL_VALUE:"test"]
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            def filename = "lockmaster-" + "${variant.name}" + "-" + verName + ".apk"
            output.outputFile = new File(file.parent, filename)
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.tencent.bugly:crashreport:1.2.9'
    compile 'com.android.support:design:23.1.1'
    compile 'me.zhanghai.android.materialprogressbar:library:1.1.4'
    compile files('libs/nineoldandroids-2.4.0.jar')
}

bugly {
    appId = '900016884'    //注册时分配的App ID
    appKey = 'T5xsaC6USHXwf8Y1'  //注册时分配的App Key
}
